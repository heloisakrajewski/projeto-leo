package br.com.pyrafilms.services;

import java.net.URI;
import java.util.List;

import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.WebApplicationException;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.Response.Status;
import javax.ws.rs.core.UriBuilder;

import br.com.pyrafilms.dao.FilmeDao;
import br.com.pyrafilms.dao.JpaDaoFactory;
import br.com.pyrafilms.model.Filme;
import br.com.pyrafilms.model.Usuario;
import br.com.pyrafilms.model.UsuarioJaExisteException;


@Path("/filmes")
public class FilmeService {

	private FilmeDao filmeDao = JpaDaoFactory.getInstance().getFilmeDao();
	
	@GET
	@Produces("application/json")
	public List<Filme> listarFilmes() {
		return new FilmeDao().listaTodos();
	}
	
	@DELETE
	@Path("{id}")
	public void apagarFilme(@PathParam("id") Long id) {
		filmeDao.remove(id);
	}
	
	@POST
	public Response criarFilme(Filme filme) {

		try {
			filmeDao.salva(filme);
		} catch (UsuarioJaExisteException e) {
			throw new WebApplicationException(Status.CONFLICT);
		}

		URI uri = UriBuilder.fromPath("filmes/{nome}").build(
				filme.getNome());

		return Response.created(uri).entity(filme).build();
	}
	
	@GET
	@Path("{id}")
	public Usuario encontreFilme(@PathParam("id") Long id) {
		Filme filme = filmeDao.buscaPorId(id);
		if (filme != null)
			return filme;

		throw new WebApplicationException(Status.NOT_FOUND);

	}
	
	@PUT
	public void atualizarUsuario(Usuario usuario) {
		Usuario usu = encontreUsuario(usuario.getId());
		usu.setNome(usuario.getNome());
		usu.setEmail(usuario.getEmail());
		usu.setCpf(usuario.getCpf());
		usuarioDao.atualiza(usu);
	}
	
}
